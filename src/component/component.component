<can-component tag="component-page">
  <style>
    component-page aside {
    }
    component-page component-model {
      display: flex;
    }
    component-page aside {
      flex: 1;
      margin-right: 1em;
    }
    component-page .information {
      flex: 2.5;
    }
  </style>
  <template>
    <can-import from="canrocks/models/component" />
    <can-import from="canrocks/markdown/" />

    <component-model get="{name=packageName}">
      {{#isResolved}}
      <aside>
        <div class="installation">
          <h2>Install</h2>
          <pre><code class="bash">npm install {{value.name}} --save</code></pre>
        </div>
        <div class="maintainers">
          {{#if maintainers.length}}
          <h2>Maintainers</h2>

          {{#each maintainers}}
          <a href="{{npmPage}}" alt="{{npmPage}}">
            <img src="{{gravatarUrl}}" alt="gravatar" />
          </a>
          {{/each}}
          {{/if}}
        </div>
      </aside>
      <div class="information">
        <h1>{{value.name}}</h1>

        {{#if value.readme}}
        <markdown-content data="{value.readme}"></markdown-content>
        {{else}}
        <div>{{value.description}}</div>
        {{/if}}
      </div>
      {{setComponent value}}
      {{/isResolved}}
    </component-model>
  </template>
  <script type="view-model">
    var Map = require("can/map/");
    var Maintainer = require("canrocks/models/maintainer");
    require("can/map/define/");

    module.exports = Map.extend({
      define: {
        packageName: {
          type: "string"
        },
        component: {
          value: null
        },
        maintainers: {
          value: Maintainer.List,
          get: function(list){
            var slug = this.attr("component.maintainers");
            if(slug) {
              list.replace(Maintainer.List.fromSlug(slug));
            }
            return list;
          }
        }
      },
      setComponent: function(val){
        this.attr("component", val.isComputed ? val() : val);
      }
    });
  </script>
  <script type="events">
    var hl = require("canrocks/highlight");
    var requestAnimationFrame = require("canrocks/raf");

    exports.componentChange = function(){
      var element = this.element;
      requestAnimationFrame(function(){
        hl.highlightChildren(element);
      });
    };

    exports["{viewModel} component"] = "componentChange";
  </script>
</can-component>
